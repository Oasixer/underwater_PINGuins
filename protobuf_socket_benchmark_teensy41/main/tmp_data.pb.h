/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_TMP_DATA_PB_H_INCLUDED
#define PB_TMP_DATA_PB_H_INCLUDED
#include "src/nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _TmpData {
    uint32_t data[64];
} TmpData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TmpData_init_default                     {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define TmpData_init_zero                        {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define TmpData_data_tag                         1

/* Struct field encoding specification for nanopb */
#define TmpData_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   data,              1)
#define TmpData_CALLBACK NULL
#define TmpData_DEFAULT NULL

extern const pb_msgdesc_t TmpData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TmpData_fields &TmpData_msg

/* Maximum encoded size of messages (where known) */
#define TmpData_size                             384

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
